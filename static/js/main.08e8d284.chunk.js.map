{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","App.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/LoaderSpinner/LoaderSpinner.module.css","Components/Searchbar/Searchbar.module.css","Components/PixabayApi/PixabayApi.jsx","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/LoaderSpinner/LoaderSpinner.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","params","key","image_type","orientation","per_page","getImages","q","page","get","then","res","data","hits","propTypes","searchQuery","PropTypes","string","number","Searchbar","onSubmit","useState","setSearchQuery","className","css","SearchForm","e","preventDefault","trim","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","image","alt","onSelect","largeImage","src","ItemImage","onClick","ImageGallery","images","query","map","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","onClose","closeEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","LoaderSpinner","spinnerBox","color","height","width","App","selectedImage","setSelectedImage","setPage","arrImages","setArrImages","loading","setLoading","error","setError","optionsApi","length","s","scrollTo","catch","finally","fetchImages","top","documentElement","scrollHeight","behavior","showLoadMoreButton","ErrorTitle","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08e8d284.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__6FID1\",\"ItemImage\":\"ImageGalleryItem_ItemImage__1SFcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3AKWi\",\"Modal\":\"Modal_Modal__poWSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1cEZt\",\"ErrorTitle\":\"App_ErrorTitle__1tZ7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__35ZuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2zOqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerBox\":\"LoaderSpinner_spinnerBox__2tliQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1FWou\",\"SearchForm\":\"Searchbar_SearchForm__1mWQ1\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1nOYD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2wfHj\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1YDgI\"};","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '22641637-7351131587a9af45879174884';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nexport const getImages = ({ q, page = 1 }) => {\r\n  return axios.get('', { params: { q, page } }).then(res => res.data.hits);\r\n};\r\n\r\ngetImages.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n  page: PropTypes.number,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Searchbar.module.css';\r\n\r\nexport const Searchbar = ({ onSubmit }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const getInputValue = e => {\r\n    setSearchQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (searchQuery.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={css.Searchbar}>\r\n      <form className={css.SearchForm} onSubmit={formSubmit}>\r\n        <button type=\"submit\" className={css.SearchFormButton}>\r\n          <span className={css.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={css.SearchFormInput}\r\n          type=\"text\"\r\n          name=\"query\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={getInputValue}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from './ImageGalleryItem.module.css';\r\n\r\nexport const ImageGalleryItem = ({ image, alt, onSelect, largeImage }) => {\r\n  return (\r\n    <li className={css.ImageGalleryItem}>\r\n      <img\r\n        src={image}\r\n        alt={alt}\r\n        className={css.ItemImage}\r\n        onClick={() => onSelect(largeImage)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from './ImageGallery.module.css';\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport const ImageGallery = ({ images, query, onSelect }) => {\r\n  return (\r\n    <ul className={css.ImageGallery}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image.webformatURL}\r\n          alt={query}\r\n          largeImage={image.largeImageURL}\r\n          onSelect={onSelect}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nexport const Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={css.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport const Modal = ({ onClose, largeImage, alt }) => {\r\n  const closeEscape = useCallback(\r\n    e => {\r\n      if (e.code === 'Escape') {\r\n        onClose(e);\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', closeEscape);\r\n  }, [closeEscape]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.removeEventListener('keydown', closeEscape);\r\n    };\r\n  }, [closeEscape]);\r\n\r\n  return createPortal(\r\n    <div className={css.Overlay} onClick={onClose}>\r\n      <div className={css.Modal}>\r\n        <img src={largeImage} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport css from './LoaderSpinner.module.css';\r\n\r\nexport const LoaderSpinner = () => {\r\n  return (\r\n    <div className={css.spinnerBox}>\r\n      <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={100} width={100} />\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getImages } from './Components/PixabayApi/PixabayApi.jsx';\r\nimport { Searchbar } from './Components/Searchbar/Searchbar.jsx';\r\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery.jsx';\r\nimport { Button } from './Components/Button/Button.jsx';\r\nimport { Modal } from './Components/Modal/Modal.jsx';\r\nimport { LoaderSpinner } from './Components/LoaderSpinner/LoaderSpinner.jsx';\r\nimport css from './App.module.css';\r\n\r\nexport const App = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [arrImages, setArrImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  // --> Запрос и рендер изображений\r\n  useEffect(() => {\r\n    const fetchImages = () => {\r\n      const q = searchQuery;\r\n      const optionsApi = { q, page };\r\n\r\n      if (q.trim() === '') {\r\n        return;\r\n      }\r\n\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      getImages(optionsApi)\r\n        .then(arrImages => {\r\n          if (arrImages.length > 0) {\r\n            setArrImages(s => [...s, ...arrImages]);\r\n            scrollTo();\r\n          } else {\r\n            setError(true);\r\n          }\r\n        })\r\n        .catch(() => setError(true))\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    fetchImages();\r\n  }, [searchQuery, page]);\r\n\r\n  // --> Выбор src для модального окна\r\n  const handleSelectImage = largeImage => setSelectedImage(largeImage);\r\n\r\n  // --> Закрытие модалки\r\n  const closeModal = e => {\r\n    if (e.target === e.currentTarget || e.code === 'Escape') {\r\n      setSelectedImage(null);\r\n    }\r\n  };\r\n\r\n  // --> Скролл (GoIT)\r\n  const scrollTo = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  // --> Следующая страница\r\n  const nextPage = () => {\r\n    setPage(s => s + 1);\r\n  };\r\n\r\n  // --> Сброс параметров для нового запроса\r\n  const updateQuery = query => {\r\n    setSearchQuery(query);\r\n    setPage(1);\r\n    setArrImages([]);\r\n  };\r\n\r\n  const showLoadMoreButton = arrImages.length > 0 && !loading;\r\n\r\n  return (\r\n    <div className={css.App}>\r\n      <Searchbar onSubmit={updateQuery} />\r\n\r\n      {error && (\r\n        <h2 className={css.ErrorTitle}>\r\n          Search result '{searchQuery}' not found!\r\n        </h2>\r\n      )}\r\n\r\n      <ImageGallery\r\n        images={arrImages}\r\n        query={searchQuery}\r\n        onSelect={handleSelectImage}\r\n      />\r\n\r\n      {loading && <LoaderSpinner />}\r\n\r\n      {showLoadMoreButton && <Button onClick={nextPage} />}\r\n\r\n      {selectedImage && (\r\n        <Modal\r\n          largeImage={selectedImage}\r\n          alt={searchQuery}\r\n          onClose={closeModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","App.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/LoaderSpinner/LoaderSpinner.module.css","Components/PixabayApi/PixabayApi.jsx","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/LoaderSpinner/LoaderSpinner.jsx","App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","axios","defaults","baseURL","params","key","image_type","orientation","per_page","getImages","q","page","get","then","res","data","hits","propTypes","searchQuery","PropTypes","string","number","Searchbar","state","getInputValue","e","setState","currentTarget","value","formSubmit","preventDefault","trim","props","onSubmit","className","css","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","alt","onSelect","largeImage","src","ItemImage","onClick","ImageGallery","images","query","map","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","closeEscape","code","onClose","window","addEventListener","removeEventListener","createPortal","Overlay","LoaderSpinner","spinnerBox","color","height","width","App","selectedImage","arrImages","loading","error","nextPage","prevState","fetchImages","optionsApi","length","catch","finally","handleSelectImage","closeModal","target","scrollTo","top","documentElement","scrollHeight","behavior","updateQuery","prevProps","showLoadMoreButton","ErrorTitle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bacfcc79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__6FID1\",\"ItemImage\":\"ImageGalleryItem_ItemImage__1SFcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3AKWi\",\"Modal\":\"Modal_Modal__poWSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1cEZt\",\"ErrorTitle\":\"App_ErrorTitle__1tZ7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__35ZuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2zOqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerBox\":\"LoaderSpinner_spinnerBox__2tliQ\"};","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '22641637-7351131587a9af45879174884';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nexport const getImages = ({ q, page = 1 }) => {\r\n  return axios.get('', { params: { q, page } }).then(res => res.data.hits);\r\n};\r\n\r\ngetImages.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n  page: PropTypes.number,\r\n};\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Searchbar.module.css\";\r\n\r\nexport class Searchbar extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  getInputValue = (e) => {\r\n    this.setState({ searchQuery: e.currentTarget.value });\r\n  };\r\n\r\n  formSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.searchQuery.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={css.Searchbar}>\r\n        <form className={css.SearchForm} onSubmit={this.formSubmit}>\r\n          <button type=\"submit\" className={css.SearchFormButton}>\r\n            <span className={css.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={css.SearchFormInput}\r\n            type=\"text\"\r\n            name=\"query\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.getInputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from './ImageGalleryItem.module.css';\r\n\r\nexport const ImageGalleryItem = ({ image, alt, onSelect, largeImage }) => {\r\n  return (\r\n    <li className={css.ImageGalleryItem}>\r\n      <img\r\n        src={image}\r\n        alt={alt}\r\n        className={css.ItemImage}\r\n        onClick={() => onSelect(largeImage)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from './ImageGallery.module.css';\r\n\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport const ImageGallery = ({ images, query, onSelect }) => {\r\n  return (\r\n    <ul className={css.ImageGallery}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image.webformatURL}\r\n          alt={query}\r\n          largeImage={image.largeImageURL}\r\n          onSelect={onSelect}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nexport const Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={css.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeEscape);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeEscape);\r\n  }\r\n\r\n  closeEscape = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={css.Overlay} onClick={this.props.onClose}>\r\n        <div className={css.Modal}>\r\n          <img src={this.props.largeImage} alt={this.props.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport css from './LoaderSpinner.module.css';\r\n\r\nexport const LoaderSpinner = () => {\r\n  return (\r\n    <div className={css.spinnerBox}>\r\n      <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={100} width={100} />\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { Component } from \"react\";\r\nimport { getImages } from \"./Components/PixabayApi/PixabayApi.jsx\";\r\nimport { Searchbar } from \"./Components/Searchbar/Searchbar.jsx\";\r\nimport { ImageGallery } from \"./Components/ImageGallery/ImageGallery.jsx\";\r\nimport { Button } from \"./Components/Button/Button.jsx\";\r\nimport { Modal } from \"./Components/Modal/Modal.jsx\";\r\nimport { LoaderSpinner } from \"./Components/LoaderSpinner/LoaderSpinner.jsx\";\r\nimport css from \"./App.module.css\";\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    selectedImage: null,\r\n    page: 1,\r\n    arrImages: [],\r\n    loading: false,\r\n    error: false,\r\n  };\r\n\r\n  // --> Запрос при обновлении компонента\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.searchQuery !== this.state.searchQuery ||\r\n      prevState.page !== this.state.page\r\n    ) {\r\n      this.fetchImages();\r\n      this.scrollTo();\r\n    }\r\n  }\r\n\r\n  nextPage = () => {\r\n    this.setState((prevState) => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  // --> Запрос и рендер изображений\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n    const q = searchQuery;\r\n    const optionsApi = { q, page };\r\n\r\n    this.setState((prevState) => ({\r\n      loading: true,\r\n    }));\r\n\r\n    getImages(optionsApi)\r\n      .then((arrImages) => {\r\n        if (arrImages.length > 0) {\r\n          this.setState((prevState) => ({\r\n            arrImages: [...prevState.arrImages, ...arrImages],\r\n            error: false,\r\n          }));\r\n        } else {\r\n          this.setState({ error: true });\r\n        }\r\n      })\r\n      .catch(() => this.setState({ error: true }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  // --> Выбор src для модального окна\r\n  handleSelectImage = (largeImage) =>\r\n    this.setState({ selectedImage: largeImage });\r\n\r\n  // --> Закрытие модалки\r\n  closeModal = (e) => {\r\n    if (e.target === e.currentTarget || e.code === \"Escape\") {\r\n      this.setState({\r\n        selectedImage: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  // --> Скролл (GoIT)\r\n  scrollTo = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  // --> Сброс параметров для нового запроса\r\n  updateQuery = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      page: 1,\r\n      arrImages: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery, arrImages, loading, selectedImage, error } =\r\n      this.state;\r\n\r\n    const showLoadMoreButton = arrImages.length > 0 && !loading;\r\n\r\n    return (\r\n      <div className={css.App}>\r\n        <Searchbar onSubmit={this.updateQuery} />\r\n\r\n        {error && (\r\n          <h2 className={css.ErrorTitle}>\r\n            Search result '{searchQuery}' not found!\r\n          </h2>\r\n        )}\r\n\r\n        {loading && <LoaderSpinner />}\r\n\r\n        <ImageGallery\r\n          images={this.state.arrImages}\r\n          query={this.state.searchQuery}\r\n          onSelect={this.handleSelectImage}\r\n        />\r\n\r\n        {showLoadMoreButton && <Button onClick={this.nextPage} />}\r\n\r\n        {selectedImage && (\r\n          <Modal\r\n            largeImage={selectedImage}\r\n            alt={searchQuery}\r\n            onClose={this.closeModal}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1FWou\",\"SearchForm\":\"Searchbar_SearchForm__1mWQ1\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1nOYD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2wfHj\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1YDgI\"};"],"sourceRoot":""}